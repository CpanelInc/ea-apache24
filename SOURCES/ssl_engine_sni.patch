--- a/modules/ssl/ssl_engine_kernel.c	2025-07-18 09:36:54.409205585 -0500
+++ b/modules/ssl/ssl_engine_kernel.c	2025-07-18 09:59:17.110400342 -0500
@@ -296,6 +296,20 @@
                 return HTTP_BAD_REQUEST;
             }
         }
+
+            if (r->server != handshakeserver
+                && !ssl_server_compatible(sslconn->server, r->server)) {
+                /*
+                 * The request does not select the virtual host that was
+                 * selected by the SNI and its SSL parameters are different
+                 */
+
+                ap_log_rerror(APLOG_MARK, APLOG_ERR, 0, r, APLOGNO(02032)
+                             "Hostname %s provided via SNI and hostname %s provided"
+                             " via HTTP have no compatible SSL setup",
+                             servername, r->hostname);
+                return HTTP_MISDIRECTED_REQUEST;
+            }
         else if (((sc->strict_sni_vhost_check == SSL_ENABLED_TRUE)
                   || hssc->strict_sni_vhost_check == SSL_ENABLED_TRUE)
                  && r->connection->vhost_lookup_data) {
@@ -315,21 +329,6 @@
                            "which is required to access this server.<br />\n");
             return HTTP_FORBIDDEN;
         }
-        if (r->server != handshakeserver
-            && !ssl_server_compatible(sslconn->server, r->server)) {
-            /*
-             * The request does not select the virtual host that was
-             * selected for handshaking and its SSL parameters are different
-             */
-
-            ap_log_rerror(APLOG_MARK, APLOG_ERR, 0, r, APLOGNO(02032)
-                         "Hostname %s %s and hostname %s provided"
-                         " via HTTP have no compatible SSL setup",
-                         servername ? servername : handshakeserver->server_hostname,
-                         servername ? "provided via SNI" : "(default host as no SNI was provided)",
-                         r->hostname);
-            return HTTP_MISDIRECTED_REQUEST;
-        }
     }
 #endif
     modssl_set_app_data2(ssl, r);
